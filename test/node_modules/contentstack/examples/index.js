/*!
 * module dependencies
 */
var Contentstack = require('contentstack');

// Initialize the Contentstack Stack
var Stack = Contentstack.Stack({
    'api_key': 'bltsomething1234',
    'access_token': 'bltsomething1234asdf',
    'environment': 'development'
});

// Setting the Cache policy on Stack
Stack.setCachePolicy(Contentstack.CachePolicy.CACHE_ELSE_NETWORK);

// Retrieve list of entries of a specified Content Type.
var list = Stack.ContentType('content_type_uid').Query();
list
    .find()
    .then(function(data) {
        //data will contain entries from a content type;
    }, function(err) {
        //displays a detailed error in case of failure;
    });

// Retrieve a specified entry from a Content Type
var entry = Stack.ContentType('content_type_uid').Entry('entry_uid');
entry
    .fetch()
    .then(function(data) {
        //data will contain an entry;
    }, function(err) {
        //displays a detailed error in case of failure;
    });

// Overwriting the Cache Policy on Query Retrieve list of entries of a specified Content Type.
var list = Stack.ContentType('content_type_uid').Query().setCachePolicy(Contentstack.CachePolicy.CACHE_THEN_NETWORK);
list
    .find()
    .then(function(data) {
        //data will contain entries from a content type;
    }, function(err) {
        //displays a detailed error in case of failure;
    });

// Retrieve a specified entry from a Content Type
var entry = Stack.ContentType('content_type_uid').Entry('entry_uid').setCachePolicy(Contentstack.CachePolicy.CACHE_THEN_NETWORK);
entry
    .fetch()
    .then(function(data) {
        //data will contain an entry;
    }, function(err) {
        //displays a detailed error in case of failure;
    });
